const mongoose = require('mongoose');
const User = require('../models/User');
require('dotenv').config();

/**
 * Script pour cr√©er les index MongoDB optimaux pour le CRM Admin
 */
async function createIndexes() {
  try {
    // Connexion √† MongoDB
    await mongoose.connect(process.env.MONGODB_URI);
    console.log('‚úÖ Connexion MongoDB √©tablie');

    // Index unique sur email (si pas d√©j√† pr√©sent)
    try {
      await User.collection.createIndex({ email: 1 }, { unique: true });
      console.log('‚úÖ Index unique cr√©√© sur User.email');
    } catch (error) {
      if (error.code === 85) {
        console.log('‚ÑπÔ∏è  Index unique sur User.email d√©j√† existant');
      } else {
        throw error;
      }
    }

    // Index compos√© pour recherche et tri par r√¥le et date
    try {
      await User.collection.createIndex({ role: 1, createdAt: -1 });
      console.log('‚úÖ Index compos√© cr√©√© sur User.role + createdAt');
    } catch (error) {
      if (error.code === 85) {
        console.log('‚ÑπÔ∏è  Index compos√© sur User.role + createdAt d√©j√† existant');
      } else {
        throw error;
      }
    }

    // Index pour recherche textuelle sur name et email
    try {
      await User.collection.createIndex({ 
        name: 'text', 
        email: 'text' 
      }, {
        name: 'user_search_text',
        weights: { name: 2, email: 1 }
      });
      console.log('‚úÖ Index de recherche textuelle cr√©√© sur User.name + email');
    } catch (error) {
      if (error.code === 85) {
        console.log('‚ÑπÔ∏è  Index de recherche textuelle d√©j√† existant');
      } else {
        throw error;
      }
    }

    // Index pour lastLogin (pour stats et tri)
    try {
      await User.collection.createIndex({ lastLogin: -1 });
      console.log('‚úÖ Index cr√©√© sur User.lastLogin');
    } catch (error) {
      if (error.code === 85) {
        console.log('‚ÑπÔ∏è  Index sur User.lastLogin d√©j√† existant');
      } else {
        throw error;
      }
    }

    // Afficher tous les index cr√©√©s
    const indexes = await User.collection.indexes();
    console.log('\nüìä Index MongoDB User collection:');
    indexes.forEach((index, i) => {
      console.log(`${i + 1}. ${index.name}: ${JSON.stringify(index.key)}`);
    });

    console.log('\nüéâ Cr√©ation des index termin√©e avec succ√®s');
    
  } catch (error) {
    console.error('‚ùå Erreur lors de la cr√©ation des index:', error);
    process.exit(1);
  } finally {
    await mongoose.disconnect();
    console.log('‚úÖ D√©connexion MongoDB');
    process.exit(0);
  }
}

// Ex√©cuter le script si appel√© directement
if (require.main === module) {
  createIndexes();
}

module.exports = createIndexes;
