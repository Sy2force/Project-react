{
  "info": {
    "name": "Business Cards API - Complete Collection",
    "description": "Collection complète pour tester l'API Business Cards avec authentification JWT, RBAC et toutes les fonctionnalités",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{jwt_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:5001/api",
      "type": "string"
    },
    {
      "key": "jwt_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "user_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "card_id",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "🔐 Authentication",
      "item": [
        {
          "name": "Register User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('jwt_token', response.token);",
                  "    pm.collectionVariables.set('user_id', response.user._id);",
                  "    pm.test('User registered successfully', () => {",
                  "        pm.expect(response.user.email).to.eql('user@test.com');",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"user@test.com\",\n  \"password\": \"UserPass123!\",\n  \"role\": \"user\",\n  \"firstName\": \"David\",\n  \"lastName\": \"Cohen\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "host": ["{{base_url}}"],
              "path": ["auth", "register"]
            }
          }
        },
        {
          "name": "Register Business",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"business@test.com\",\n  \"password\": \"BusinessPass123!\",\n  \"role\": \"business\",\n  \"firstName\": \"Sarah\",\n  \"lastName\": \"Levy\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "host": ["{{base_url}}"],
              "path": ["auth", "register"]
            }
          }
        },
        {
          "name": "Register Admin",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@test.com\",\n  \"password\": \"AdminPass123!\",\n  \"role\": \"admin\",\n  \"firstName\": \"Michael\",\n  \"lastName\": \"Goldstein\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "host": ["{{base_url}}"],
              "path": ["auth", "register"]
            }
          }
        },
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('jwt_token', response.token);",
                  "    pm.collectionVariables.set('user_id', response.user._id);",
                  "    pm.test('Login successful', () => {",
                  "        pm.expect(response.token).to.be.a('string');",
                  "        pm.expect(response.user.role).to.eql('user');",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"user@test.com\",\n  \"password\": \"UserPass123!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            }
          }
        },
        {
          "name": "Login Business",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('jwt_token', response.token);",
                  "    pm.collectionVariables.set('user_id', response.user._id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"business@test.com\",\n  \"password\": \"BusinessPass123!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            }
          }
        },
        {
          "name": "Login Admin",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('jwt_token', response.token);",
                  "    pm.collectionVariables.set('user_id', response.user._id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@test.com\",\n  \"password\": \"AdminPass123!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            }
          }
        },
        {
          "name": "Get Current User",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/auth/me",
              "host": ["{{base_url}}"],
              "path": ["auth", "me"]
            }
          }
        }
      ]
    },
    {
      "name": "🏢 Business Cards",
      "item": [
        {
          "name": "Get All Cards",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/cards?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["cards"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "Get Cards with Search",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/cards?search=restaurant&hasLocation=true",
              "host": ["{{base_url}}"],
              "path": ["cards"],
              "query": [
                {
                  "key": "search",
                  "value": "restaurant"
                },
                {
                  "key": "hasLocation",
                  "value": "true"
                }
              ]
            }
          }
        },
        {
          "name": "Get My Cards",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/cards/my",
              "host": ["{{base_url}}"],
              "path": ["cards", "my"]
            }
          }
        },
        {
          "name": "Create Card (Business/Admin)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('card_id', response._id);",
                  "    pm.test('Card created successfully', () => {",
                  "        pm.expect(response.title).to.eql('Test Restaurant');",
                  "        pm.expect(response.bizNumber).to.be.a('string');",
                  "    });",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Test Restaurant\",\n  \"subtitle\": \"Cuisine méditerranéenne\",\n  \"description\": \"Restaurant familial servant une cuisine méditerranéenne authentique avec des produits frais et locaux. Ambiance chaleureuse et service attentionné.\",\n  \"phone\": \"03-123-4567\",\n  \"email\": \"contact@testrestaurant.co.il\",\n  \"webUrl\": \"https://testrestaurant.co.il\",\n  \"address\": \"123 Rothschild Blvd, Tel Aviv, Israel\",\n  \"location\": {\n    \"lat\": 32.0668,\n    \"lng\": 34.7647\n  },\n  \"image\": \"https://images.unsplash.com/photo-1517248135467-4c7edcad34c4?w=400\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/cards",
              "host": ["{{base_url}}"],
              "path": ["cards"]
            }
          }
        },
        {
          "name": "Get Card by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/cards/{{card_id}}",
              "host": ["{{base_url}}"],
              "path": ["cards", "{{card_id}}"]
            }
          }
        },
        {
          "name": "Update Card (Owner/Admin)",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Test Restaurant - Updated\",\n  \"subtitle\": \"Cuisine méditerranéenne premium\",\n  \"description\": \"Restaurant familial servant une cuisine méditerranéenne authentique avec des produits frais et locaux. Ambiance chaleureuse et service attentionné. Nouvellement rénové!\",\n  \"phone\": \"03-123-4567\",\n  \"email\": \"contact@testrestaurant.co.il\",\n  \"webUrl\": \"https://testrestaurant.co.il\",\n  \"address\": \"123 Rothschild Blvd, Tel Aviv, Israel\",\n  \"location\": {\n    \"lat\": 32.0668,\n    \"lng\": 34.7647\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/cards/{{card_id}}",
              "host": ["{{base_url}}"],
              "path": ["cards", "{{card_id}}"]
            }
          }
        },
        {
          "name": "Delete Card (Owner/Admin)",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/cards/{{card_id}}",
              "host": ["{{base_url}}"],
              "path": ["cards", "{{card_id}}"]
            }
          }
        }
      ]
    },
    {
      "name": "❤️ Favorites",
      "item": [
        {
          "name": "Get My Favorites",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users/favorites",
              "host": ["{{base_url}}"],
              "path": ["users", "favorites"]
            }
          }
        },
        {
          "name": "Add to Favorites",
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users/favorites/{{card_id}}",
              "host": ["{{base_url}}"],
              "path": ["users", "favorites", "{{card_id}}"]
            }
          }
        },
        {
          "name": "Remove from Favorites",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users/favorites/{{card_id}}",
              "host": ["{{base_url}}"],
              "path": ["users", "favorites", "{{card_id}}"]
            }
          }
        }
      ]
    },
    {
      "name": "👥 Users (Admin Only)",
      "item": [
        {
          "name": "Get All Users",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["users"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "Get User by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["users", "{{user_id}}"]
            }
          }
        },
        {
          "name": "Update User",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"firstName\": \"David Updated\",\n  \"lastName\": \"Cohen\",\n  \"role\": \"business\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/users/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["users", "{{user_id}}"]
            }
          }
        },
        {
          "name": "Delete User",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/users/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["users", "{{user_id}}"]
            }
          }
        }
      ]
    },
    {
      "name": "🧪 Test Scenarios",
      "item": [
        {
          "name": "Test Password Validation (Should Fail)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"weakpass@test.com\",\n  \"password\": \"weak\",\n  \"role\": \"user\",\n  \"firstName\": \"Test\",\n  \"lastName\": \"User\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "host": ["{{base_url}}"],
              "path": ["auth", "register"]
            }
          }
        },
        {
          "name": "Test Unauthorized Access (Should Fail)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer invalid_token"
              }
            ],
            "url": {
              "raw": "{{base_url}}/cards/my",
              "host": ["{{base_url}}"],
              "path": ["cards", "my"]
            }
          }
        },
        {
          "name": "Test User Creating Card (Should Fail)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Unauthorized Card\",\n  \"subtitle\": \"Should not work\",\n  \"description\": \"This should fail for user role\",\n  \"phone\": \"03-123-4567\",\n  \"email\": \"test@test.com\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/cards",
              "host": ["{{base_url}}"],
              "path": ["cards"]
            }
          }
        }
      ]
    }
  ]
}
